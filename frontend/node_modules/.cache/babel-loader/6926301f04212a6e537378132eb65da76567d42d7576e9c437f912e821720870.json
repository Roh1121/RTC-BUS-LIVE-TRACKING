{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rohini\\\\CascadeProjects\\\\rtc-bus-tracking\\\\frontend\\\\src\\\\components\\\\Map\\\\SimpleMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default markers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nexport const SimpleMap = ({\n  buses = [],\n  selectedRoute,\n  center = [17.3850, 78.4867],\n  zoom = 12,\n  className = ''\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const markersRef = useRef([]);\n  useEffect(() => {\n    if (!mapRef.current || mapInstanceRef.current) return;\n\n    // Create map instance\n    mapInstanceRef.current = L.map(mapRef.current).setView(center, zoom);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(mapInstanceRef.current);\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [center, zoom]);\n\n  // Update bus markers\n  useEffect(() => {\n    if (!mapInstanceRef.current) return;\n\n    // Clear existing markers\n    markersRef.current.forEach(marker => {\n      var _mapInstanceRef$curre;\n      (_mapInstanceRef$curre = mapInstanceRef.current) === null || _mapInstanceRef$curre === void 0 ? void 0 : _mapInstanceRef$curre.removeLayer(marker);\n    });\n    markersRef.current = [];\n\n    // Add new markers\n    buses.forEach(bus => {\n      if (bus.currentLocation && bus.currentLocation.latitude && bus.currentLocation.longitude) {\n        var _bus$occupancy, _bus$occupancy2;\n        const marker = L.marker([bus.currentLocation.latitude, bus.currentLocation.longitude]).bindPopup(`\n            <div>\n              <h3>${bus.busNumber}</h3>\n              <p>Status: ${bus.status}</p>\n              <p>Occupancy: ${((_bus$occupancy = bus.occupancy) === null || _bus$occupancy === void 0 ? void 0 : _bus$occupancy.occupiedSeats) || 0}/${((_bus$occupancy2 = bus.occupancy) === null || _bus$occupancy2 === void 0 ? void 0 : _bus$occupancy2.totalSeats) || 0}</p>\n            </div>\n          `);\n        if (mapInstanceRef.current) {\n          marker.addTo(mapInstanceRef.current);\n          markersRef.current.push(marker);\n        }\n      }\n    });\n  }, [buses]);\n\n  // Update route polyline\n  useEffect(() => {\n    var _selectedRoute$stops;\n    if (!mapInstanceRef.current || !selectedRoute) return;\n    const coordinates = (_selectedRoute$stops = selectedRoute.stops) === null || _selectedRoute$stops === void 0 ? void 0 : _selectedRoute$stops.sort((a, b) => a.order - b.order).map(stop => [stop.coordinates.latitude, stop.coordinates.longitude]);\n    if (coordinates && coordinates.length > 1) {\n      const polyline = L.polyline(coordinates, {\n        color: selectedRoute.color || '#3388ff',\n        weight: 4,\n        opacity: 0.7\n      }).addTo(mapInstanceRef.current);\n\n      // Fit bounds to route\n      mapInstanceRef.current.fitBounds(polyline.getBounds(), {\n        padding: [20, 20]\n      });\n      return () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.removeLayer(polyline);\n        }\n      };\n    }\n  }, [selectedRoute]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: '100%',\n        height: '500px',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleMap, \"M7vtHaGRmHwaQ0mWrPSJ8B08FuI=\");\n_c = SimpleMap;\nvar _c;\n$RefreshReg$(_c, \"SimpleMap\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","SimpleMap","buses","selectedRoute","center","zoom","className","_s","mapRef","mapInstanceRef","markersRef","current","map","setView","tileLayer","attribution","addTo","remove","forEach","marker","_mapInstanceRef$curre","removeLayer","bus","currentLocation","latitude","longitude","_bus$occupancy","_bus$occupancy2","bindPopup","busNumber","status","occupancy","occupiedSeats","totalSeats","push","_selectedRoute$stops","coordinates","stops","sort","a","b","order","stop","length","polyline","color","weight","opacity","fitBounds","getBounds","padding","children","ref","style","width","height","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rohini/CascadeProjects/rtc-bus-tracking/frontend/src/components/Map/SimpleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default markers\ndelete (L.Icon.Default.prototype as any)._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\n});\n\ninterface SimpleMapProps {\n  buses: any[];\n  selectedRoute?: any;\n  center?: [number, number];\n  zoom?: number;\n  className?: string;\n}\n\nexport const SimpleMap: React.FC<SimpleMapProps> = ({\n  buses = [],\n  selectedRoute,\n  center = [17.3850, 78.4867],\n  zoom = 12,\n  className = ''\n}) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const mapInstanceRef = useRef<L.Map | null>(null);\n  const markersRef = useRef<L.Marker[]>([]);\n\n  useEffect(() => {\n    if (!mapRef.current || mapInstanceRef.current) return;\n\n    // Create map instance\n    mapInstanceRef.current = L.map(mapRef.current).setView(center, zoom);\n\n    // Add tile layer\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(mapInstanceRef.current);\n\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, [center, zoom]);\n\n  // Update bus markers\n  useEffect(() => {\n    if (!mapInstanceRef.current) return;\n\n    // Clear existing markers\n    markersRef.current.forEach(marker => {\n      mapInstanceRef.current?.removeLayer(marker);\n    });\n    markersRef.current = [];\n\n    // Add new markers\n    buses.forEach(bus => {\n      if (bus.currentLocation && bus.currentLocation.latitude && bus.currentLocation.longitude) {\n        const marker = L.marker([bus.currentLocation.latitude, bus.currentLocation.longitude])\n          .bindPopup(`\n            <div>\n              <h3>${bus.busNumber}</h3>\n              <p>Status: ${bus.status}</p>\n              <p>Occupancy: ${bus.occupancy?.occupiedSeats || 0}/${bus.occupancy?.totalSeats || 0}</p>\n            </div>\n          `);\n        \n        if (mapInstanceRef.current) {\n          marker.addTo(mapInstanceRef.current);\n          markersRef.current.push(marker);\n        }\n      }\n    });\n  }, [buses]);\n\n  // Update route polyline\n  useEffect(() => {\n    if (!mapInstanceRef.current || !selectedRoute) return;\n\n    const coordinates = selectedRoute.stops\n      ?.sort((a: any, b: any) => a.order - b.order)\n      .map((stop: any) => [stop.coordinates.latitude, stop.coordinates.longitude]);\n\n    if (coordinates && coordinates.length > 1) {\n      const polyline = L.polyline(coordinates, { \n        color: selectedRoute.color || '#3388ff',\n        weight: 4,\n        opacity: 0.7\n      }).addTo(mapInstanceRef.current);\n\n      // Fit bounds to route\n      mapInstanceRef.current.fitBounds(polyline.getBounds(), { padding: [20, 20] });\n\n      return () => {\n        if (mapInstanceRef.current) {\n          mapInstanceRef.current.removeLayer(polyline);\n        }\n      };\n    }\n  }, [selectedRoute]);\n\n  return (\n    <div className={`relative ${className}`}>\n      <div \n        ref={mapRef} \n        style={{ \n          width: '100%', \n          height: '500px',\n          zIndex: 1\n        }} \n      />\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}